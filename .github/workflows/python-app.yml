name: Python application

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest codeql-action[python] dependabot-action
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8. --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8. --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: First interaction
      uses: actions/first-interaction@v1.3.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        issue-message: "Welcome to our project Please review our contributing guidelines before submitting your first issue."
        pr-message: "Thank you for creating your first pull request We appreciate your contribution. Please review our pull request template for guidance."
    - name: Cache
      uses: actions/cache@v4.0.2
      with:
    # A list of files, directories, and wildcard patterns to cache and restore
        path: main
        # An explicit key for restoring and saving the cache
        key: key
        # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
        restore-keys: # optional
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: # optional
        # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
        enableCrossOsArchive: # optional, default is false
        # Fail the workflow if cache entry is not found
        fail-on-cache-miss: # optional, default is false
        # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
        lookup-only: # optional, default is false
        # Run the post step to save the cache even if another step before fails
        save-always: # optional, default is false
          
